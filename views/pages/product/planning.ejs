<!doctype html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta name="description" content="">
	<meta name="author" content="">
	<link rel="icon" href="../../../../favicon.ico">

	<title>Alexandra S Cook</title>

	<link rel="stylesheet" href="/css/bootstrap.min.css">
	<script src="/js/jquery.min.js"></script>
	<script src="/js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="/stylesheets/main.css" />
	<link rel="stylesheet" type="text/css" href="/stylesheets/carousel.css" />


</head>

<body>

	<% include ../../partials/nav.ejs %>

	<main role="main">
		<section class="section about-section gray-bg" id="about">
			<div class="container">
				<div class="row flex-row" style="padding-top: 5rem;">
					<div class="col-lg-2">
						<% include ../../partials/product_sidebar.ejs %>
					</div>
					<div class="col-lg-10">
						<div id="main-content">
							<h2>Planning in Product</h2>
							<p>
								<h3>Planning Layers</h3>
								<ul>
									<li>Company Vision - Owned by execs or CEO</li>
									<li>Business Strategy - Owned by execs or CEO</li>
									<li>Product Vision - Owned by Product</li>
									<li>Product Strategy - Owned by Product</li>
									<li>Release Plan - Owned by Product</li>
									<li>Sprint Plan - Owned by Developers</li>
									<li>Daily Plan - Owned by Developers</li>
								</ul>

								All the items for product in the planning layers are considered a gap called the
								"Product Management Vacuum"
								If we are not careful, these can get filled with meaningless busy work and detailed task
								management.
								You can easily run the risk of being busy without a clear intention.

								Vacuums can cause
								<ul>
									<li>Disconnected development team from the business</li>
									<li>Less engagement from those on the ground</li>
									<li>More Reliance on project and task management</li>
									<li>More hierarchies and handoffs</li>
									<li>More complexity</li>
									<li>Difficulty to shift directions</li>
									<li>More "busy work"</li>
									<li>More waste and rework</li>
									<li>Less value delivered to clients</li>
								</ul>

								<p>To fill vacuums, we can use the 3 Vs, Value, Validation and Vision</p>

								<h2><a href="/product/vision">Vision</a></h2>
								<p class="lead">
									A north star, a never-ending piece of work that we commit to going after for life -
									Ari Weinzweig
								</p>
								<p>
									Creates transparency for the team around the overall idea behind the product. By
									communicating our intent clearly we enable those around us to make informed
									decisions without our help.
									To enable this self-organization, a shared vision and clear boundaries are
									absolutely necessary. Your vision should represent the voice of your customers,
									which will result in better value delivery and retention.
									Connecting the product vision to the company's vision can be extremely helpful is
									maintaining and gaining alignment.</p>
								<ul>
									<li>Focused</li>
									<li>Emotional</li>
									<li>Practical</li>
									<li>Pervasive</li>
								</ul>
								<h2>Value</h2> 
								<p class="lead">
									If everything is important, then nothing is - Patrick Lencioni
								</p>
								<p></p>

								<h2>Validation</h2>
								<p class="lead">
									Validation causes <strong>Adaptation</strong>
								</p>
								<p>Most assumptions we make in business end up being wrong. The need to validate work
									will come at some point and by validating more frequently, we can help to minimize
									the overall risk we take in the PDLC.</p>
								<p>While we may receive some validation during our Sprint Reviews, true validation can
									only come when the product begins to be used. This means that we need to have
									realistic plans in place for frequent releases to production to enable these
									validations.</p>

								<p>There are two core feedback loops in Scrum</p>
								<ul>
									<li>Process Validation - how the team is working</li>
									<li>Product Validation - what the team is building</li>
								</ul>
							</p>
							<h2>Product Backlog Management</h2>
							<p>In Scrum, the product backlog is a living document that covers all the emerging requirements for the product in a ordered list with the most valuable to-do items on top.</p>
							<p>First, see the notes from the <a href="/scrum/events">scrum events section</a>.</p>
							<p>Product Requirements can be bucketed into three types:</p>
							<ol>
								<li>Functional - How/why someone uses the system</li>
								<li>Non-Functional - How the system should behave (stability, usability, performance)</li>
								<li>Business Domain Rules (Regulations, laws, processes, etc)</li>
							</ol>
							<p>The backlog can contain all sorts of work:</p>
							<ul>
								<li>Feature Requests</li>
								<li>Non-Functional Requirements</li>
								<li>Experiments</li>
								<li>User Stories</li>
								<li>Bugs/Defects</li>
								<li>Use Cases</li>
								<li>Capabilities</li>
							</ul>
							<h3>User Stories</h3>
							<p>A common technique to detail requirements in a brief and semi-ambiguous manner.</p>
							<p>Three Cs of User Stories</p>
							<ol>
								<li>Card - Limit on length</li>
								<li>Conversation - Ambiguous details meant to drive conversations</li>
								<li>Confirmation - Acceptance Criteria determined from the conversation on the minimal requirements</li>
							</ol>
							<p>You may also choose to fill out a story template like the below</p>
							<p class="lead">As a [role], I want [behavior] so that, [the value]</p>
							<p>You can use the INVEST method to examine the quality of your user stories:</p>
							<p><strong>I</strong>ndependent</p>
							<p><strong>N</strong>egotiable</p>
							<p><strong>V</strong>aluable</p>
							<p><strong>E</strong>estimatable</p>
							<p><strong>S</strong>mall</p>
							<p><strong>T</strong>estable</p>
							<p>You can also use the DEEP method</p>
							<p><strong>D</strong>etailed Enough</p>
							<p><strong>E</strong>mergent</p>
							<p><strong>E</strong>stimated Relatively</p>
							<p><strong>P</strong>rioritzed Orderd</p>

							<h3>Non-Functional Requirements</h3>
							<p>Requirements that exist as long as your product exists that can be captured as: a PBI, A/C, or part of the DoD</p>
							<ul>
								<li>usability</li>
								<li>Scalability</li>
								<li>Portability</li>
								<li>Maintainability</li>
								<li>Availability</li>
								<li>Accessibility</li>
								<li>Supportability</li>
								<li>Security</li>
								<li>Performance</li>
								<li>Cost</li>
								<li>Legal and Compliance</li>
								<li>Cultural</li>
							</ul>

							<h3>Acceptance Criteria</h3>
							<p>What the customer will see to approve the work as complete</p>
							<p>Three common ways to write A/C:</p>
							<ol>
								<li>Test that...</li>
								<li>Demonstrate that...</li>
								<li>Given...when...that...</li>
							</ol>

							<p>Good Acceptance Criteria can be checked with the following methods:</p>
							<strong>SMART</strong>
							<p><strong>S</strong>pecific</p>
							<p><strong>M</strong>easurable</p>
							<p><strong>A</strong>ttainable</p>
							<p><strong>R</strong>elevant</p>
							<p><strong>T</strong>ime-Bound</p>
							<strong>SAFE</strong>
							<p><strong>S</strong>uccess</p>
							<p><strong>A</strong>dvance</p>
							<p><strong>F</strong>ailure</p>
							<p><strong>E</strong>rror</p>

							<h2>Product Backlog Ordering</h2>
							<p>There are a lot of different factors that should be considered when ordering your Product's Backlog:</p>
							<ul>
								<li>Business Value</li>
									<ul>
										<li>Revenue</li>
										<li>Cost Saving</li>
										<li>Customer Retention</li>
										<li>Prospect Customers</li>
										<li>Feature Opportunity</li>
									</ul>
								<li>Risk</li>
									<ul>
										<li>Low, Medium, High</li>
									</ul>
								<li>Cost/Size</li>
									<ul><li>See <a href="/scrum/events#ProductBacklogRefinement-Estimation">estimation</a></li></ul>
								<li>Dependency</li>
							</ul>
							<p>Ordering Games:</p>
							<ul>
								<li>Business Value Game - Planning Poker but for value</li>
								<li>Buy-a-Feature - use money to purchase features</li>
								<li>20/20 vision - Innovation game for simple ordering</li>
								<li>Thirty-five - Collaboration activity for ordering</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
		</section>
	</main>
</body>

</html>